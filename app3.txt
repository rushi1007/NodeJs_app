const express = require('express');
const exphbs = require('express-handlebars');
const mongoose = require('mongoose');
const app = express();
const port = process.env.PORT || 8000;
const bodyParser = require('body-parser'); // Import body-parser

// Import the database URL from the database.js module
const database = require('./config/database');

app.engine(
  'hbs',
  exphbs.engine({
    extname: '.hbs',
    runtimeOptions: {
      allowProtoPropertiesByDefault: true,
      allowProtoMethodsByDefault: true,
    },
  })
);

app.set('view engine',Â 'hbs');

// Use body-parser middleware
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

// Connect to MongoDB using the database URL
mongoose.connect(database.url);
const Invoice = require('./models/invoices2');

// Route to fetch all invoices and render the Handlebars template
app.get('/alldata', async (req, res) => {
    try {
        // Fetch all invoices from the database
        const invoices = await Invoice.find();
        // Render the 'invoices' template and pass the invoices data to it
        res.render('alldata', { invoices });
    } catch (err) {
        // Handle any errors that occur during the process
        console.error(err);
        res.status(500).send('Internal Server Error');
    }
});

// Add this route to your app.js or app3.js file
app.get('/newInvoice', (req, res) => {
    res.render('newInvoice');
});
// Add this route to your app.js or app3.js file
app.post('/api/invoices', async (req, res) => {
    try {
        const newInvoice = {
            invoice_id: req.body["Invoice ID"],
            branch: req.body.Branch,
            city: req.body.City,
            customer_type: req.body["Customer type"],
            product_line: req.body["Product line"],
            name: req.body.name,
            image: req.body.image,
            unit_price: req.body["Unit price"],
            quantity: req.body.Quantity,
            tax: req.body["Tax 5%"],
            total: req.body.Total,
            date: req.body.Date,
            time: req.body.Time,
            payment: req.body.Payment,
            cogs: req.body.cogs,
            gross_income: req.body["gross income"],
            rating: req.body.Rating
        };

        await Invoice.create(newInvoice);

        res.redirect('/alldata'); // Redirect to the page displaying all invoices
    } catch (error) {
        console.error(error);
        res.status(500).send('Internal Server Error');
    }
});

  
app.listen(port, () => {
    console.log(`App listening on port ${port}`);
});

<!-- alldata.hbs -->

<!DOCTYPE html>
<html>
<head>
  <title>Invoice Data</title>
  <style>
    table {
      font-family: Arial, sans-serif;
      border-collapse: collapse;
      width: 100%;
    }

    td, th {
      border: 1px solid #dddddd;
      text-align: left;
      padding: 8px;
    }

    th {
      background-color: #f2f2f2;
    }
  </style>
</head>
<body>
  <h1>Sales Data</h1>
  <table>
    <thead>
      <tr>
        <th>Invoice ID</th>
        <th>Branch</th>
        <th>City</th>
        <th>Customer Type</th>
        <th>Product Line</th>
        <th>Product Name</th>
        <th>Image</th>
        <th>Unit Price</th>
        <th>Quantity</th>
        <th>Tax (5%)</th>
        <th>Total</th>
        <th>Date</th>
        <th>Time</th>
        <th>Payment</th>
        <th>COGS</th>
        <th>Gross Income</th>
        <th>Rating</th>
      </tr>
    </thead>
     <tbody>
    {{#each invoices}}
        <tr>
            {{!-- <td>{{this[`Invoice ID`]}}</td> --}}
            <td>{{this.Branch}}</td>
            <td>{{this.City}}</td>
            {{!-- <td>{{this[`Customer type`]}}</td> --}}
            {{!-- <td>{{this[`Product line`]}}</td> --}}
            <td>{{this.name}}</td>
            <td><img src="{{this.image}}" alt="Product Image" width="100"></td>
            {{!-- <td>{{this[`Unit price`]}}</td> --}}
            <td>{{this.Quantity}}</td>
            {{!-- <td>{{this[`Tax 5%`]}}</td> --}}
            <td>{{this.Total}}</td>
            <td>{{this.Date}}</td>
            <td>{{this.Time}}</td>
            <td>{{this.Payment}}</td>
            <td>{{this.cogs}}</td>
            {{!-- <td>{{this[`gross income`]}}</td> --}}
            <td>{{this.Rating}}</td>
        </tr>
    {{/each}}
</tbody>
  </table>
</body>
</html>



// load mongoose since we need it to define a model
var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var EmpSchema = new Schema({
    "Invoice ID": String,
    Branch: String,
    City: String,
    "Customer type": String,
    "Product line": String,
    name: String,
    image: String,
    "Unit price": Number,
    Quantity: Number,
    "Tax 5%": Number,
    Total: Number,
    Date: String,
    Time: String,
    Payment: String,
    cogs: Number,
    "gross income": Number,
    Rating: Number
});
module.exports = mongoose.model('invoices',EmpSchema);
